트리(TREE) 나무나무나무나무나무나무
	나무나무나무나무나무나무나무나무나무나무나무나무
	계층나무나무나무나무나무적인 데이터 구조로, 각 요소를 노드(Node)라고 부름
	노드 사이의 관계는 가지(branch)로 표현가지가지가지가지
	계층 구조를 표현하고 데이터를 효율적으로 저장하고 검색하는 데 사용
	
**주요 특징과 용어 (트리 = 노드)

	1. 부모 노드 : 다른 하나 이상의 노드를 자식으로 가지고 있는 노드
	2. 자식 노드 : 트리트리트리트리트리트리트리트리트리트리틜트리트리틔릐릩릐ㅢㅌ릐ㅣ
				 부모 노드로부터 직접 연결된 노드
				 자기 자신과 연결된 노드 중 자신보다 낮은 노드 
				 
	3. 루트 노드 : 트리의 가장 상위에 있는 노드
				 모든 다른 노드들은 이 루트 노드에서 시작하는 경로를 통해 접근 가능
				 뿌리 노드이기 때문에 하나밖에 존재하지 X (부모노드도 없음요)

	4. 리트 노드 : 자식 노드가 없는 노드 > 가장 최하위에 위치
				 단말 노드라고도 부름
				 
	5. 서브 노드 : 트리 내에서 특정 노드와 그 자손 노드들로 구성된 작은 트리

		깊이(Depth) : 특정 노드에 도달하기 위해 거쳐야하는 간선의 개수
		레벨 : 특정 깊이에 있는 노드들의 집합. 구현하는 사람에 따라 0 또는 1부터 시작
		치수 : 특정 노드가 하위 노드와 연결된 개수
	
	6. 이진 트리(Binary Tree) : 
		각 노드가 최대 두 개의 자식 노드를 가지는 트리
		각 자식 노드는 왼쪽 자식과 오른쪽 자식을 가짐
		이진 검색 트리(BST, Binary Search Tree)
			> 이진 트리 중에서도 중요한 종류로, 데이터를 정렬된 순서로 저장하여 검색 및 삽입 연산에 효율적
	
	7. AVL 트리(Adelson-Velsky and Landis : 자가 균형 이진 탐색 트리)
		균형 이진 트리 검색의 일종
		모든 노드의 서브트리 높이 차이가 최대 1인 트리
		균형을 유지하면 검색, 삽입, 삭제 연산의 평균 시간 복잡도가 0이 됨
	
	8. 이진 힙(Binary Heap)
		최대 힙과 최소 힙
		우선순위 큐와 같은 데이터 구조를 구현하는 데 사용
			최대 힙 : 부모 노드가 항상 자식 노드보다 크거나 같은 값을 가짐
			최소 힙 : 부모 노드가 항상 자식 노드보다 작거나 같을 값을 가짐
		
	9. 이진 트리의 확장
		이진 트리를 확장한 구조로는 이진 탐색 트리 (레드-블랙, B-트리, B+트리 등등 어쩌구...)
		데이터 베이스 인덱싱, 파일 시스템, 자료 구조 등에서 활용